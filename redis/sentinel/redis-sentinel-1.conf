bind 192.168.50.41 127.0.0.1

# 哨兵的端口号
# 因为各个哨兵节点会运行在单独的Docker容器中
# 所以无需担心端口重复使用
# 如果需要在单机
port 26379

# 配置哨兵的监控参数
# 格式：sentinel monitor <master-name> <ip> <redis-port> <quorum>
# master-name是为这个被监控的master起的名字
# ip是被监控的master的IP或主机名。因为Docker容器之间可以使用容器名访问，所以这里写master节点的容器名
# redis-port是被监控节点所监听的端口号
# quorom设定了当几个哨兵判定这个节点失效后，才认为这个节点真的失效了

# 连接主节点的密码
# 格式：sentinel auth-pass <master-name> <password>
sentinel myid 0b65e04e51f4e797335f841a1dd61c32b27fcfc9

# master在连续多长时间无法响应PING指令后，就会主观判定节点下线，默认是30秒
# 格式：sentinel down-after-milliseconds <master-name> <milliseconds>
sentinel monitor mymaster 192.168.50.41 6379 2
sentinel auth-pass mymaster szjfbg
# Generated by CONFIG REWRITE
dir "/data"
sentinel config-epoch mymaster 0
sentinel leader-epoch mymaster 0
sentinel known-slave mymaster 192.168.50.41 6381
sentinel known-slave mymaster 192.168.50.41 6380
sentinel known-sentinel mymaster 192.168.50.41 26381 3dcc7071777e080a2de19b6ae1b480eea1e3a1c3
sentinel known-sentinel mymaster 192.168.50.41 26380 a13fc40a58d3a24ba5475b9629839943bd62612f
sentinel current-epoch 0
